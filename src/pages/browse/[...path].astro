---
import { type FileType, getAllFiles } from '@/util/files';
import { permalink } from "@/util/link";
import FilePreview from '@/components/FilePreview.astro';
import DirectoryPreview from '@/components/DirectoryPreview.astro';
import Layout from '@/layouts/Layout.astro';

export function getStaticPaths() {
  return getAllFiles();
}

interface Props {
  path: string,
  type: FileType,
}

const { path, type } = Astro.props;

const isFile = type === 'file';
---

<Layout title={`Viewing: ${path}`}>
  <div class="breadcrumbs">
    <a class="breadcrumb" href={permalink("/browse/")}>Root</a>
    {path.split('/').filter(Boolean).map((segment, i, arr) => {
        let pathSoFar = arr.slice(0, i + 1).join('/');

        if (i < arr.length - (isFile ? 1 : 0)) pathSoFar += '/';

        return [
          ' / ', <a class="breadcrumb" href={permalink(`/browse/${pathSoFar}`)}>{segment}</a>
        ];
    })}
  </div>

  {isFile ? (
    <FilePreview path={path} />
  ) : (
    <DirectoryPreview path={path} /> 
  )}
</Layout>